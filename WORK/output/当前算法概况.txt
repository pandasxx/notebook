分割算法部分

技术方案
	YOLO-V3

当前最好效果
	
	数据分布类似的情况下（同一批次）

	在5类中，召回率达到如下
	ASCUS	:	443/475      	recall:	0.9326315789473684
	LSIL		:	534/561      	recall:	0.9518716577540107
	ASCH	:	56/84      		recall:	0.6666666666666666
	HSIL		:	220/366      	recall:	0.6010928961748634
	SCC		:	56/103      	recall:	0.5436893203883495
	同时准确率达到如下
	ASCUS	:	443/836      	acc:		0.5299043062200957
	LSIL		:	534/776      	acc:		0.6881443298969072
	ASCH	:	56/123      	acc:		0.45528455284552843
	HSIL		:	220/595      	acc:		0.3697478991596639
	SCC		:	56/67      		acc:		0.835820895522388

	数据规范相差较大的情况下（不同批次和标注方法）

	在5类中，召回率达到如下
	ASCUS	:	281/699      	recall:	0.402002861230329
	LSIL		:	880/1482      	recall:	0.5937921727395412
	ASCH	:	9/59      		recall:	0.15254237288135594
	HSIL		:	0/1      		recall:	0.0
	SCC		:	0/0      		recall:	0
	同时准确率达到如下
	ASCUS	:	281/975      	acc:	0.2882051282051282
	LSIL		:	880/1576      	acc:	0.5583756345177665
	ASCH	:	9/111      		acc:	0.08108108108108109
	HSIL		:	0/346      		acc:	0.0
	SCC		:	0/92      		acc:	0.0

批次差异原因（即test2表现差的原因）
	
	数据标注不规范，数据质量不一致

	两次的数据质量和标注规范有差异

达到当前效果做出的改善
	
	增加信噪比

	数据增强

	参数调整

	数据预处理方法

后续改善方向
	
	数据清洗
		难点在规范和细节，以及工作量

	模型的参数调整
		需要大量实验

	算法的策略结合
		从异常细胞着手 + 从正常细胞着手
		后续环节算法
		其他

总结
	
	1 在规范的数据标注标准和质量下，当前方法能达到不错的召回率和准确率

	2 分割算法有继续提升的空间

	3 数据清洗理想的情况下，能在不同批次即test2的验证集上达到validate类似的较高高召回率和准确率
	
	4 后续环节的算法和数据处理可以抑制1的不准确造成的影响




	

















